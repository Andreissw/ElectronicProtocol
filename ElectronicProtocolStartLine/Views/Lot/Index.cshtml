@model IEnumerable<ElectronicProtocolStartLine.Class.Protocols.ProtocolTables>
@*<h1>Служба - @Session["Service"] </h1>
    <h1>@Session["Name"]</h1>*@

@{
    ViewBag.Title = "Index";
}
<div>@Html.ActionLink("Вернуться назад", "WorkForm", "Home")</div>

@if (Session["UsID"].ToString() != "0" & Session["Manuf"].ToString() != "Входной контроль")
{
    <div style="margin-top: 3%; margin-bottom: 2%;">@Html.ActionLink("Создать протокол", "Index", "SetLine", new { LOTID = Model.FirstOrDefault().LOTID }, new { @class = "btn btn-success", @style = "background-color: green" })</div>
}

@if (Session["Manuf"].ToString() == "Входной контроль")
{
    <div style="margin-top: 3%; margin-bottom: 2%;">@Html.ActionLink("Заполнить протокол", "EditProtocol", "Lot", new { ID = Model.FirstOrDefault().ID, LOTID = Model.FirstOrDefault().LOTID }, new { @class="btn btn-success", @style = "background-color: green" })</div>
}

<h2>Заказ @Model.FirstOrDefault().NameOrder </h2>
<div id="mes"></div>

@foreach (var iM in Model.Select(c => c.Manuf).Distinct())
{
    <div class="block">
        <table class="table">

            <thead>
                <tr>
                    <th colspan="6">
                        @iM
                    </th>
                </tr>
            </thead>

            <tr>
                <th>
                    Имя протокола
                </th>
                <th>
                    Сторона платы
                </th>
                <th>
                    Линия
                </th>
                <th>
                    Программы
                </th>
                <th>
                    Дата создания
                </th>
                <th>
                    Проверка протокола
                </th>
                <th style="text-align: center; border-left: 0.3px solid darkgray; ">
                    Отчёт протокола
                </th>
            </tr>

            @foreach (var item in Model.Where(b => (b.IsActiveTOP == true || b.IsActiveBOT == true) & b.Manuf == iM))
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelitem => item.NameProtocol)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TOPBOT)
                    </td>
                    <td>
                        @Html.DisplayFor(modelitem => item.Line)
                    </td>
                    <td>
                        @Html.ActionLink("Показать", "GetPGName", "LOT", new { ProtocolID = item.ID, name = item.NameOrder, Protocolname = item.NameProtocol }, new { @class = "btn btn-info", target = "_blank" })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateCreate)
                    </td>

                    <td>
                        @if (item.InfoTOPBOT.CountAll != 0)
                        {
                            <div>
                                <div style="display:flex">
                                    <div>@Html.ActionLink($"Заполнить протокол {item.InfoTOPBOT.CountTrue} из {item.InfoTOPBOT.CountAll}", "EditProtocol", new { ID = item.ID, LOTID = Model.FirstOrDefault().LOTID, TOPBOT = "TOP", line = item.Line }, new { @class = "btn btn-success", @style = "background-color: lightblue; color:black;" })</div>
                                </div>
                            </div>
                        }
                    </td>

                    <td style="text-align:center; border-left:0.3px solid darkgray;">

                        @if ((Session["Service"].ToString() == "Технический директор" || Session["Service"].ToString() == "Бог") & item.Manuf == "Цех поверхностного монтажа")
                        {
                            <div style="margin-bottom:2%;">
                                <label class="btn btn-success" onclick="StartProtocol(@item.ID, @item.Line,'TOP',@Model.FirstOrDefault().LOTID, '@item.NameProtocol')"> Запустить протокол без проверки Строна Вверх </label>
                            </div>
                            <div style="margin-bottom:2%;">
                                <label class="btn btn-success" onclick="StartProtocol(@item.ID,@item.Line,'BOT',@Model.FirstOrDefault().LOTID, '@item.NameProtocol')"> Запустить протокол без проверки Строна Низ </label>
                            </div>
                        }

                        <div>
                            @Html.ActionLink("Открыть отчёт по протоколу", "GetReportProtocol", "Lot", new { ID = item.ID, LOTID = Model.FirstOrDefault().LOTID, NameProtocol = item.NameProtocol, NameOrder = item.NameOrder, Line = item.Line, TOPBOT = item.TOPBOT, Manuf = item.Manuf }, new { @class = "btn btn-success", @style = "background-color: gold; color:black;" })
                        </div>
                    </td>

                </tr>
            }

        </table>
    </div>
}

<script>
    function StartProtocol(idPrt, Line ,TOPBOT, LOTID, NameProtocol) {
        if (!confirm("Уверены, что хотите запустить протокол без проверки?")) return;

        $.ajax({

            url: '@Url.Action("StartProtocol", "Lot")',
            dataType: "json",
            data: { idProtocol: idPrt, Line: Line, TOPBOT: TOPBOT, LOTID: LOTID},
            success: function (message) {
                if (message != "true") {
                    MessageGet(message, "style='background-color: lightcoral'; font-size:36px;");
                }
                else {
                    MessageGet('Успешно запущен протокол' + NameProtocol + 'Сторона' + TOPBOT, "style='background-color: lightgreen'");
                }
            }
        })

        function MessageGet(message, style) {
            document.getElementById('mes').innerHTML = "<label " + style + ">" + message + "</label>"
        }

    }
</script>

<style>
    table {
        background-color: lightgray;
    }

    .table tr:nth-child(odd) {
        background-color: #EAF2D3;
    }

    td {
        font-size: 20px;
    }

    thead th {
        font-size: 20px;
        text-align: center;
        background-color: gold;
    }

    .block {
        max-height: 800px;
        height: auto;
        overflow-y: auto;
    }
</style>